openapi: 3.0.0
info:
  title: Goodnight API
  version: 1.0.0
  description: A REST API for tracking sleep patterns and following friends' sleep records

servers:
  - url: http://localhost:3000/api
    description: Development server

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login to get access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: alice
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

  /sleep/clock-in:
    post:
      tags:
        - Sleep
      summary: Record sleep start time
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully clocked in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/SleepRecord'

  /sleep/clock-out:
    post:
      tags:
        - Sleep
      summary: Record sleep end time
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully clocked out
        '404':
          description: No open sleep session found

  /sleep/records:
    get:
      tags:
        - Sleep
      summary: Get user's sleep records from the past week
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of sleep records
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SleepRecord'

  /users/{userId}/follow:
    post:
      tags:
        - Users
      summary: Follow a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully followed user
        '400':
          description: Cannot follow yourself or already following
        '404':
          description: User not found
    delete:
      tags:
        - Users
      summary: Unfollow a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully unfollowed user
        '404':
          description: Follow relationship not found

  /users/friends/sleep-records:
    get:
      tags:
        - Users
      summary: Get friends' sleep records from the past week
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of friends' sleep records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FriendSleepRecord'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SleepRecord:
      type: object
      properties:
        id:
          type: integer
          example: 1
        clockIn:
          type: string
          format: date-time
          example: "2024-02-10T08:00:00.000Z"
        clockOut:
          type: string
          format: date-time
          example: "2024-02-10T16:00:00.000Z"
        duration:
          type: string
          example: "8:00:00"
        durationFormatted:
          type: string
          example: "8h 0m"

    FriendSleepRecord:
      type: object
      properties:
        id:
          type: integer
        clockIn:
          type: string
          format: date-time
        clockOut:
          type: string
          format: date-time
        duration:
          type: string
        user:
          type: object
          properties:
            username:
              type: string 